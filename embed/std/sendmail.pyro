pub class Email {
    var to_address: str = "";
    var from_address: str = "";
    var subject: str = "";
    var headers: vec[str];
    var body: buf;

    def $init() {
        self.headers = $vec();
        self.body = $buf();
    }

    def $str() {
        var msg = self:make_message();
        if $is_err(msg) {
            return $fmt("<instance Email: {}>", msg);
        }
        return msg:to_str();
    }

    pub def to(address: str) -> Email {
        if !$is_str(address) {
            $panic("to(): invalid argument, expected a string, found ${address;??}");
        }
        self.to_address = address;
        return self;
    }

    pub def from(address: str) -> Email {
        if !$is_str(address) {
            $panic("from(): invalid argument, expected a string, found ${address;??}");
        }
        self.from_address = address;
        return self;
    }

    pub def subject(value: str) -> Email {
        if !$is_str(value) {
            $panic("subject(): invalid argument, expected a string, found ${value;??}");
        }
        self.subject = value;
        return self;
    }

    pub def add_header(header: str) -> Email {
        if !$is_str(header) {
            $panic("add_header(): invalid argument, expected a string, found ${header;??}");
        }
        self.headers:append(header);
        return self;
    }

    pub def write(*args: any) -> Email {
        self.body:write(*args);
        return self;
    }

    pub def send() -> err? {
        var msg = self:make_message();
        if $is_err(msg) {
            return $err("send(): ${msg}")
        }

        var result = try $run("sendmail", ["-i", "-t"], msg);
        if $is_err(result) {
            return $err("send(): ${result}");
        }

        var (exit_code, _, err_buf) = result;
        if exit_code != 0 {
            return $err("send(): ${err_buf:to_str():strip()}")
        }
    }

    def make_message() -> buf|err {
        if self.to_address == "" {
            return $err("invalid email: missing 'to' address");
        }

        if self.from_address == "" {
            return $err("invalid email: missing 'from' address");
        }

        if self.subject == "" {
            return $err("invalid email: missing 'subject' field");
        }

        var msg = $buf();

        msg:write("To: {}\r\n", self.to_address:strip():replace("\r", "\\r"):replace("\n", "\\n"));
        msg:write("From: {}\r\n", self.from_address:strip():replace("\r", "\\r"):replace("\n", "\\n"));
        msg:write("Subject: {}\r\n", self.subject:strip():replace("\r", "\\r"):replace("\n", "\\n"));

        for header in self.headers {
            if header != "" {
                msg:write("{}\r\n", header:strip():replace("\r", "\\r"):replace("\n", "\\n"));
            }
        }

        msg:write("\r\n");
        msg:write($str(self.body):strip());

        return msg;
    }
}
