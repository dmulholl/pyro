---
title: Quickstart Tutorial
meta_title: Pyro &mdash; Quickstart Tutorial
---

[wsl]: https://docs.microsoft.com/en-us/windows/wsl/

::: insert toc


### Building Pyro

You'll need a C compiler and a POSIX compatible operating system (Mac, Linux, BSD, etc.) to build Pyro from source.
(If you're on Windows, you can use the [WSL][] to try Pyro out.)

First, download the Pyro repository from Github:

::: code
    $ git clone https://github.com/dmulholl/pyro.git

`cd` into the `pyro` directory and run `make`:

::: code
    $ cd pyro
    $ make

The `pyro` binary will be created in a new `out/release` directory as `out/release/pyro`.

`cd` into the `out/release` directory and try running the binary with the `--help` flag to view the command line help:

::: code
    $ ./pyro --help

    Usage: pyro [file]

      The Pyro programming language.

    Arguments:
      [file]             Script to run. Will open the REPL
                         if omitted.

    Flags:
      -h, --help         Print this help text and exit.
      -v, --version      Print the version number and exit.

    Commands:
      test               Run unit tests.
      time               Run timing functions.

    Command Help:
      help <command>     Print the command's help text.



### Hello World

Let's make a simple test script.
Create a file called `hello.pyro` and add the following line to it:

::: code pyro
    echo "hello world";

Run the script by supplying its filename to the binary:

::: code
    $ ./pyro hello.pyro
    hello world

That's it, you can officially add Pyro to the list of languages on your CV.
Take the [tour](@root/tour//) if you'd like to learn more about the language.



### Installing Pyro

You can run `make install` from the `pyro` directory to install Pyro on your system:

::: code
    $ sudo make install

This copies the Pyro binary to the `/usr/local/bin/` directory.
(You may need to use `sudo` to give Make permission to access this folder.)

You can now run Pyro like any other installed binary:

::: code
    $ pyro

Running Pyro without a script argument launches the REPL --- an interactive environment where you can try running Pyro commands directly.
Type `exit` or hit `Ctrl-D` to end the REPL session.
