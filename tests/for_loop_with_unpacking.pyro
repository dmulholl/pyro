# Test unpacking into a single loop variable.
var count = 0;
for (value) in $range(10):map(def(n) { return $tup(n); }) {
    assert value == count;
    count += 1;
}

count = 0;
for (value) in $range(10):map(def(n) { return $tup(n, n + 1, n + 2); }) {
    assert value == count;
    count += 1;
}


# Test unpacking into two loop variables.
var vec1 = [
    $tup(1, 2),
    $tup(2, 4),
    $tup(3, 6),
    $tup(4, 8),
];

for (x, y) in vec1 {
    assert y == x * 2;
}


# Test unpacking into three loop variables.
var vec2 = [
    $tup(1, 2, 4),
    $tup(2, 4, 8),
    $tup(3, 6, 12),
    $tup(4, 8, 16),
];

for (x, y, z) in vec2 {
    assert y == x * 2;
    assert z == y * 2;
}


# Test partial unpacking.
var vec3 = [
    $tup(1, 2, 4),
    $tup(2, 4, 8),
    $tup(3, 6, 12),
    $tup(4, 8, 16),
];

for (x, y) in vec3 {
    assert y == x * 2;
}


# Test unpacking a map entry into key and value.
var map = {
    "1" = 1,
    "2" = 2,
    "3" = 3,
    "4" = 4,
};

for (key, value) in map {
    assert key == $str(value);
}
