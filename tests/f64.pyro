import std::constants;

assert $is_f64(1.0);
assert $is_f64(1.23);
assert $is_f64(0.123);

assert $is_f64(-1.0);
assert $is_f64(-1.23);
assert $is_f64(-0.123);

assert !$is_f64(1);
assert !$is_f64(true);
assert !$is_f64(false);
assert !$is_f64(null);
assert !$is_f64("foo");

assert $is_f64($f64(1.0));
assert $f64(1.0) == 1.0;

assert $f64(1) == 1.0;
assert $f64(-1) == -1.0;

assert $f64(4294967296) == 4294967296.0;

assert $is_f64(constants::nan);
assert $is_nan(constants::nan);

assert $is_f64(constants::inf);
assert $is_inf(constants::inf);
assert $is_inf(-constants::inf);

assert $f64("0") == 0.0;
assert $f64("1") == 1.0;
assert $f64("123") == 123.0;
assert $f64("123.456") == 123.456;
assert $f64("123456789.123456789") == 123456789.123456789;

assert $f64("123_456_789.123_456_789") == 123456789.123456789;
assert $f64("123_456_789.123_456_789") == 123_456_789.123_456_789;

assert $f64("1e3") == 1000.0;
assert $f64("1e6") == 1000000.0;
assert $f64("1e-3") == 0.001;

assert 123.456 == 123.456;
assert 123.456 == $f64(`123.456`);
assert $f64(`123.456`) == 123.456;

assert 0.1 == 0.1;
assert 0.1 == 0.100000000000000001;
assert 0.100000000000000001 == 0.1;
assert 0.100000000000000001 == 0.100000000000000001;

assert 0.3 == 0.3;
assert 0.3 == 0.29999999999999999;

assert 0.1 + 0.1 + 0.1 == 0.1 + 0.1 + 0.1;
assert 0.1 + 0.1 + 0.1 == 0.30000000000000004;
assert 0.1 + 0.1 + 0.1 != 0.3;

assert 0.1 * 3 - 0.3 != 0.0;
