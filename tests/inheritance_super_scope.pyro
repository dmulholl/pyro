class A {
    pub def foo() {
        return "a-foo";
    }
}


class B extends A {
    pub def foo() {
        return "b-foo";
    }

    pub def test() {
        return super:foo();
    }
}


class C extends B {
}


# Verify that `super` is lexically-scoped, i.e. even though the method is called on an
# instance of C the `super` in B resolves lexically to A.
var b = B();
assert b:test() == "a-foo";

var c = C();
assert c:test() == "a-foo";
