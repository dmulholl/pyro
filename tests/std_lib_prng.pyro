import std::prng;

assert $is_f64(prng::rand_float());
assert prng::rand_float() >= 0.0 && prng::rand_float() < 1.0;
assert prng::rand_float() >= 0.0 && prng::rand_float() < 1.0;
assert prng::rand_float() >= 0.0 && prng::rand_float() < 1.0;
assert prng::rand_float() >= 0.0 && prng::rand_float() < 1.0;
assert prng::rand_float() >= 0.0 && prng::rand_float() < 1.0;
assert prng::rand_float() >= 0.0 && prng::rand_float() < 1.0;
assert prng::rand_float() >= 0.0 && prng::rand_float() < 1.0;
assert prng::rand_float() >= 0.0 && prng::rand_float() < 1.0;
assert prng::rand_float() >= 0.0 && prng::rand_float() < 1.0;
assert prng::rand_float() >= 0.0 && prng::rand_float() < 1.0;
assert prng::rand_float() >= 0.0 && prng::rand_float() < 1.0;
assert prng::rand_float() >= 0.0 && prng::rand_float() < 1.0;
assert prng::rand_float() >= 0.0 && prng::rand_float() < 1.0;
assert prng::rand_float() >= 0.0 && prng::rand_float() < 1.0;
assert prng::rand_float() >= 0.0 && prng::rand_float() < 1.0;
assert prng::rand_float() >= 0.0 && prng::rand_float() < 1.0;
assert prng::rand_float() >= 0.0 && prng::rand_float() < 1.0;
assert prng::rand_float() >= 0.0 && prng::rand_float() < 1.0;
assert prng::rand_float() >= 0.0 && prng::rand_float() < 1.0;
assert prng::rand_float() >= 0.0 && prng::rand_float() < 1.0;
assert prng::rand_float() >= 0.0 && prng::rand_float() < 1.0;

assert $is_i64(prng::rand_int(3));
assert prng::rand_int(3) >= 0 && prng::rand_int(3) < 3;
assert prng::rand_int(3) >= 0 && prng::rand_int(3) < 3;
assert prng::rand_int(3) >= 0 && prng::rand_int(3) < 3;
assert prng::rand_int(3) >= 0 && prng::rand_int(3) < 3;
assert prng::rand_int(3) >= 0 && prng::rand_int(3) < 3;
assert prng::rand_int(3) >= 0 && prng::rand_int(3) < 3;
assert prng::rand_int(3) >= 0 && prng::rand_int(3) < 3;
assert prng::rand_int(3) >= 0 && prng::rand_int(3) < 3;
assert prng::rand_int(3) >= 0 && prng::rand_int(3) < 3;
assert prng::rand_int(3) >= 0 && prng::rand_int(3) < 3;
assert prng::rand_int(3) >= 0 && prng::rand_int(3) < 3;
assert prng::rand_int(3) >= 0 && prng::rand_int(3) < 3;
assert prng::rand_int(3) >= 0 && prng::rand_int(3) < 3;
assert prng::rand_int(3) >= 0 && prng::rand_int(3) < 3;
assert prng::rand_int(3) >= 0 && prng::rand_int(3) < 3;
assert prng::rand_int(3) >= 0 && prng::rand_int(3) < 3;
assert prng::rand_int(3) >= 0 && prng::rand_int(3) < 3;
assert prng::rand_int(3) >= 0 && prng::rand_int(3) < 3;
assert prng::rand_int(3) >= 0 && prng::rand_int(3) < 3;
assert prng::rand_int(3) >= 0 && prng::rand_int(3) < 3;
assert prng::rand_int(3) >= 0 && prng::rand_int(3) < 3;
assert prng::rand_int(3) >= 0 && prng::rand_int(3) < 3;

assert $is_i64(prng::rand_int_in_range(-2, 2));
assert prng::rand_int_in_range(-2, 2) >= -2 && prng::rand_int_in_range(-2, 2) < 2;
assert prng::rand_int_in_range(-2, 2) >= -2 && prng::rand_int_in_range(-2, 2) < 2;
assert prng::rand_int_in_range(-2, 2) >= -2 && prng::rand_int_in_range(-2, 2) < 2;
assert prng::rand_int_in_range(-2, 2) >= -2 && prng::rand_int_in_range(-2, 2) < 2;
assert prng::rand_int_in_range(-2, 2) >= -2 && prng::rand_int_in_range(-2, 2) < 2;
assert prng::rand_int_in_range(-2, 2) >= -2 && prng::rand_int_in_range(-2, 2) < 2;
assert prng::rand_int_in_range(-2, 2) >= -2 && prng::rand_int_in_range(-2, 2) < 2;
assert prng::rand_int_in_range(-2, 2) >= -2 && prng::rand_int_in_range(-2, 2) < 2;
assert prng::rand_int_in_range(-2, 2) >= -2 && prng::rand_int_in_range(-2, 2) < 2;
assert prng::rand_int_in_range(-2, 2) >= -2 && prng::rand_int_in_range(-2, 2) < 2;
assert prng::rand_int_in_range(-2, 2) >= -2 && prng::rand_int_in_range(-2, 2) < 2;
assert prng::rand_int_in_range(-2, 2) >= -2 && prng::rand_int_in_range(-2, 2) < 2;
assert prng::rand_int_in_range(-2, 2) >= -2 && prng::rand_int_in_range(-2, 2) < 2;
assert prng::rand_int_in_range(-2, 2) >= -2 && prng::rand_int_in_range(-2, 2) < 2;
assert prng::rand_int_in_range(-2, 2) >= -2 && prng::rand_int_in_range(-2, 2) < 2;
assert prng::rand_int_in_range(-2, 2) >= -2 && prng::rand_int_in_range(-2, 2) < 2;
assert prng::rand_int_in_range(-2, 2) >= -2 && prng::rand_int_in_range(-2, 2) < 2;
assert prng::rand_int_in_range(-2, 2) >= -2 && prng::rand_int_in_range(-2, 2) < 2;
assert prng::rand_int_in_range(-2, 2) >= -2 && prng::rand_int_in_range(-2, 2) < 2;
assert prng::rand_int_in_range(-2, 2) >= -2 && prng::rand_int_in_range(-2, 2) < 2;
assert prng::rand_int_in_range(-2, 2) >= -2 && prng::rand_int_in_range(-2, 2) < 2;
assert prng::rand_int_in_range(-2, 2) >= -2 && prng::rand_int_in_range(-2, 2) < 2;
