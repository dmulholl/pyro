import std::fs;
import std::fs::{exists, is_file, is_dir, is_symlink};
import std::fs::{basename, dirname, join};
import std::fs::{normpath};

assert exists($filepath);
assert is_file($filepath);
assert is_dir(dirname($filepath));
assert is_file(join(dirname($filepath), basename($filepath)));

assert exists(fs::cwd());
assert is_dir(fs::cwd());

# Test basename().
assert basename("") == "";
assert basename("/") == "";
assert basename("/foo.txt") == "foo.txt";
assert basename("foo.txt/") == "";
assert basename("foo.txt") == "foo.txt";
assert basename("foo/bar.txt") == "bar.txt";
assert basename("/foo/bar.txt") == "bar.txt";
assert basename("foo/bar/baz.txt") == "baz.txt";
assert basename("/foo/bar/baz.txt") == "baz.txt";

# Test dirname().
assert dirname("") == "";
assert dirname("/") == "/";
assert dirname("/foo.txt") == "/";
assert dirname("foo.txt/") == "foo.txt";
assert dirname("foo.txt") == "";
assert dirname("foo/bar.txt") == "foo";
assert dirname("/foo/bar.txt") == "/foo";
assert dirname("foo/bar/baz.txt") == "foo/bar";
assert dirname("/foo/bar/baz.txt") == "/foo/bar";

# Test join().
assert $is_err(try join());

assert join("foo") == "foo";

assert join("foo", "bar") == "foo/bar";

assert join("/foo", "bar") == "/foo/bar";
assert join("foo/", "bar") == "foo/bar";
assert join("foo", "/bar") == "/bar";
assert join("foo", "bar/") == "foo/bar/";

assert join("/foo/", "bar") == "/foo/bar";
assert join("foo", "/bar/") == "/bar/";
assert join("foo/", "/bar") == "/bar";
assert join("/foo", "bar/") == "/foo/bar/";
assert join("/foo", "/bar") == "/bar";
assert join("foo/", "bar/") == "foo/bar/";

assert join("/foo/", "/bar/") == "/bar/";

assert join("") == "";

assert join("", "") == "";
assert join("foo", "") == "foo";
assert join("", "bar") == "bar";

assert join("foo", "bar", "baz") == "foo/bar/baz";
assert join("foo", "", "baz") == "foo/baz";
assert join("", "bar", "") == "bar";
assert join("foo", "", "") == "foo";
assert join("", "bar", "") == "bar";
assert join("", "", "baz") == "baz";
assert join("", "", "") == "";

# Test normpath() for relative paths.
assert normpath("") == ".";
assert normpath(".") == ".";
assert normpath("..") == "..";
assert normpath("../..") == "../..";
assert normpath("..//..") == "../..";
assert normpath("../../..") == "../../..";
assert normpath("..//..//..") == "../../..";
assert normpath("../../../..") == "../../../..";
assert normpath("..//..//..//..") == "../../../..";
assert normpath("./") == ".";
assert normpath(".//") == ".";
assert normpath(".///") == ".";
assert normpath("./.") == ".";
assert normpath(".//.") == ".";
assert normpath("././") == ".";
assert normpath(".//.//") == ".";
assert normpath("././.") == ".";
assert normpath(".//.//.") == ".";
assert normpath("./././") == ".";
assert normpath(".//.//.//") == ".";
assert normpath("./..") == "..";
assert normpath("../.") == "..";
assert normpath("././..") == "..";
assert normpath(".././.") == "..";
assert normpath("./../.") == "..";
assert normpath(".././..") == "../..";

assert normpath("foo") == "foo";
assert normpath("../foo") == "../foo";
assert normpath("..//foo") == "../foo";
assert normpath("foo/..") == ".";
assert normpath("foo//..") == ".";
assert normpath("../foo/..") == "..";
assert normpath("..//foo//..") == "..";
assert normpath("../../foo") == "../../foo";
assert normpath("..//..//foo") == "../../foo";
assert normpath("foo/../..") == "..";
assert normpath("foo//..//..") == "..";
assert normpath("../../foo/../..") == "../../..";
assert normpath("..//..//foo//..//..") == "../../..";
assert normpath("foo/") == "foo";
assert normpath("foo//") == "foo";
assert normpath("foo///") == "foo";
assert normpath("./foo") == "foo";
assert normpath(".//foo") == "foo";
assert normpath("foo/.") == "foo";
assert normpath("foo//.") == "foo";
assert normpath("././foo") == "foo";
assert normpath(".//.//foo") == "foo";
assert normpath("foo/.") == "foo";
assert normpath("foo//.") == "foo";
assert normpath("foo/./.") == "foo";
assert normpath("foo//.//.") == "foo";
assert normpath("./foo/.") == "foo";
assert normpath(".//foo//.") == "foo";
assert normpath("././foo/./.") == "foo";
assert normpath(".//.//foo//.//.") == "foo";
assert normpath("./../foo") == "../foo";
assert normpath(".././foo") == "../foo";
assert normpath("foo/../.") == ".";
assert normpath("foo/./..") == ".";

assert normpath("foo/bar") == "foo/bar";
assert normpath("foo//bar") == "foo/bar";
assert normpath("foo///bar") == "foo/bar";
assert normpath("foo/bar/") == "foo/bar";
assert normpath("foo//bar//") == "foo/bar";
assert normpath("foo///bar///") == "foo/bar";
assert normpath("../foo/bar") == "../foo/bar";
assert normpath("..//foo//bar") == "../foo/bar";
assert normpath("../../foo/bar") == "../../foo/bar";
assert normpath("..//..//foo//bar") == "../../foo/bar";
assert normpath("foo/bar/..") == "foo";
assert normpath("foo//bar//..") == "foo";
assert normpath("foo/bar/../") == "foo";
assert normpath("foo//bar//..//") == "foo";
assert normpath("foo/bar/../..") == ".";
assert normpath("foo//bar//..//..") == ".";
assert normpath("foo/bar/../../") == ".";
assert normpath("foo//bar//..//..//") == ".";
assert normpath("foo/../bar") == "bar";
assert normpath("foo//..//bar") == "bar";
assert normpath("foo/../../bar") == "../bar";
assert normpath("foo//..//..//bar") == "../bar";
assert normpath("foo/../../../bar") == "../../bar";
assert normpath("foo//..//..//..//bar") == "../../bar";
assert normpath("foo///..///..///..///bar") == "../../bar";
assert normpath("./foo/bar") == "foo/bar";
assert normpath("foo/./bar") == "foo/bar";
assert normpath("foo/bar/.") == "foo/bar";
assert normpath("././foo/bar") == "foo/bar";
assert normpath("foo/././bar") == "foo/bar";
assert normpath("foo/bar/./.") == "foo/bar";
assert normpath("./../foo/bar") == "../foo/bar";
assert normpath("foo/./../bar") == "bar";
assert normpath("foo/bar./..") == "foo";
assert normpath("foo/bar./../") == "foo";
assert normpath(".././foo/bar") == "../foo/bar";
assert normpath("foo/.././bar") == "bar";
assert normpath("foo/bar/../.") == "foo";
assert normpath("foo/bar/.././") == "foo";

# Test normpath() for absolute paths beginning with "/".
assert normpath("/") == "/";
assert normpath("///") == "/";
assert normpath("////") == "/";
assert normpath("/.") == "/";
assert normpath("/./") == "/";
assert normpath("/./.") == "/";
assert normpath("/././") == "/";
assert normpath("/..") == "/";
assert normpath("/../") == "/";
assert normpath("/../..") == "/";
assert normpath("/../../") == "/";
assert normpath("/./..") == "/";
assert normpath("/./../") == "/";
assert normpath("/../.") == "/";
assert normpath("/.././") == "/";
assert normpath("/./../..") == "/";
assert normpath("/./../../") == "/";
assert normpath("/.././..") == "/";
assert normpath("/.././../") == "/";
assert normpath("/../../.") == "/";
assert normpath("/../.././") == "/";

assert normpath("/foo") == "/foo";
assert normpath("///foo") == "/foo";
assert normpath("////foo") == "/foo";
assert normpath("/foo/") == "/foo";
assert normpath("/foo//") == "/foo";
assert normpath("/foo///") == "/foo";
assert normpath("/../foo") == "/foo";
assert normpath("/..//foo") == "/foo";
assert normpath("/../../foo") == "/foo";
assert normpath("/..//..//foo") == "/foo";
assert normpath("/foo/..") == "/";
assert normpath("/foo//..") == "/";
assert normpath("/foo/../") == "/";
assert normpath("/foo//..//") == "/";
assert normpath("/foo/../..") == "/";
assert normpath("/foo/../../") == "/";
assert normpath("/./foo") == "/foo";
assert normpath("/././foo") == "/foo";
assert normpath("/foo/.") == "/foo";
assert normpath("/foo/./.") == "/foo";
assert normpath("/.././foo") == "/foo";
assert normpath("/./../foo") == "/foo";
assert normpath("/foo/./..") == "/";
assert normpath("/foo/../.") == "/";

assert normpath("/foo/bar") == "/foo/bar";
assert normpath("///foo/bar") == "/foo/bar";
assert normpath("/foo/bar/") == "/foo/bar";
assert normpath("///foo/bar/") == "/foo/bar";
assert normpath("/../foo/bar") == "/foo/bar";
assert normpath("/foo/../bar") == "/bar";
assert normpath("/foo/bar/..") == "/foo";
assert normpath("/foo/bar/../") == "/foo";
assert normpath("/./../foo/bar") == "/foo/bar";
assert normpath("/.././foo/bar") == "/foo/bar";
assert normpath("/foo/./../bar") == "/bar";
assert normpath("/foo/.././bar") == "/bar";
assert normpath("/foo/bar/./..") == "/foo";
assert normpath("/foo/bar/../.") == "/foo";
assert normpath("/foo/bar/./../") == "/foo";
assert normpath("/foo/bar/.././") == "/foo";
assert normpath("/foo/bar/./../") == "/foo";
assert normpath("/../../foo/bar") == "/foo/bar";
assert normpath("/foo/../../bar") == "/bar";
assert normpath("/foo/bar/../..") == "/";
assert normpath("/foo/bar/../../") == "/";
assert normpath("/./foo/bar") == "/foo/bar";
assert normpath("/foo/./bar") == "/foo/bar";
assert normpath("/foo/bar/.") == "/foo/bar";
assert normpath("/foo/bar/./") == "/foo/bar";

# Test normpath() for absolute paths beginning with "//".
assert normpath("//") == "//";
assert normpath("//.") == "//";
assert normpath("//./") == "//";
assert normpath("//./.") == "//";
assert normpath("//././") == "//";
assert normpath("//..") == "//";
assert normpath("//../") == "//";
assert normpath("//../..") == "//";
assert normpath("//../../") == "//";
assert normpath("//./..") == "//";
assert normpath("//./../") == "//";
assert normpath("//../.") == "//";
assert normpath("//.././") == "//";
assert normpath("//./../..") == "//";
assert normpath("//./../../") == "//";
assert normpath("//.././..") == "//";
assert normpath("//.././../") == "//";
assert normpath("//../../.") == "//";
assert normpath("//../.././") == "//";

assert normpath("//foo") == "//foo";
assert normpath("//foo/") == "//foo";
assert normpath("//foo//") == "//foo";
assert normpath("//foo///") == "//foo";
assert normpath("//../foo") == "//foo";
assert normpath("//..//foo") == "//foo";
assert normpath("//../../foo") == "//foo";
assert normpath("//..//..//foo") == "//foo";
assert normpath("//foo/..") == "//";
assert normpath("//foo//..") == "//";
assert normpath("//foo/../") == "//";
assert normpath("//foo//..//") == "//";
assert normpath("//foo/../..") == "//";
assert normpath("//foo/../../") == "//";
assert normpath("//./foo") == "//foo";
assert normpath("//././foo") == "//foo";
assert normpath("//foo/.") == "//foo";
assert normpath("//foo/./.") == "//foo";
assert normpath("//.././foo") == "//foo";
assert normpath("//./../foo") == "//foo";
assert normpath("//foo/./..") == "//";
assert normpath("//foo/../.") == "//";

assert normpath("//foo/bar") == "//foo/bar";
assert normpath("//foo/bar/") == "//foo/bar";
assert normpath("//../foo/bar") == "//foo/bar";
assert normpath("//foo/../bar") == "//bar";
assert normpath("//foo/bar/..") == "//foo";
assert normpath("//foo/bar/../") == "//foo";
assert normpath("//./../foo/bar") == "//foo/bar";
assert normpath("//.././foo/bar") == "//foo/bar";
assert normpath("//foo/./../bar") == "//bar";
assert normpath("//foo/.././bar") == "//bar";
assert normpath("//foo/bar/./..") == "//foo";
assert normpath("//foo/bar/../.") == "//foo";
assert normpath("//foo/bar/./../") == "//foo";
assert normpath("//foo/bar/.././") == "//foo";
assert normpath("//foo/bar/./../") == "//foo";
assert normpath("//../../foo/bar") == "//foo/bar";
assert normpath("//foo/../../bar") == "//bar";
assert normpath("//foo/bar/../..") == "//";
assert normpath("//foo/bar/../../") == "//";
assert normpath("//./foo/bar") == "//foo/bar";
assert normpath("//foo/./bar") == "//foo/bar";
assert normpath("//foo/bar/.") == "//foo/bar";
assert normpath("//foo/bar/./") == "//foo/bar";

# Test normpath() for filenames with dotted extension.
assert normpath("foo.txt") == "foo.txt";
assert normpath("./foo.txt") == "foo.txt";
assert normpath("foo.txt/.") == "foo.txt";
assert normpath("././foo.txt") == "foo.txt";
assert normpath("foo.txt/./.") == "foo.txt";
assert normpath("../foo.txt") == "../foo.txt";
assert normpath("foo.txt/..") == ".";
assert normpath("../../foo.txt") == "../../foo.txt";
assert normpath("foo.txt/../..") == "..";
assert normpath("./../foo.txt") == "../foo.txt";
assert normpath(".././foo.txt") == "../foo.txt";
assert normpath("foo.txt/./..") == ".";
assert normpath("foo.txt/../.") == ".";

assert normpath("/foo.txt") == "/foo.txt";
assert normpath("/./foo.txt") == "/foo.txt";
assert normpath("/foo.txt/.") == "/foo.txt";
assert normpath("/././foo.txt") == "/foo.txt";
assert normpath("/foo.txt/./.") == "/foo.txt";
assert normpath("/../foo.txt") == "/foo.txt";
assert normpath("/foo.txt/..") == "/";
assert normpath("/../../foo.txt") == "/foo.txt";
assert normpath("/foo.txt/../..") == "/";
assert normpath("/./../foo.txt") == "/foo.txt";
assert normpath("/.././foo.txt") == "/foo.txt";
assert normpath("/foo.txt/./..") == "/";
assert normpath("/foo.txt/../.") == "/";

assert normpath("//foo.txt") == "//foo.txt";
assert normpath("//./foo.txt") == "//foo.txt";
assert normpath("//foo.txt/.") == "//foo.txt";
assert normpath("//././foo.txt") == "//foo.txt";
assert normpath("//foo.txt/./.") == "//foo.txt";
assert normpath("//../foo.txt") == "//foo.txt";
assert normpath("//foo.txt/..") == "//";
assert normpath("//../../foo.txt") == "//foo.txt";
assert normpath("//foo.txt/../..") == "//";
assert normpath("//./../foo.txt") == "//foo.txt";
assert normpath("//.././foo.txt") == "//foo.txt";
assert normpath("//foo.txt/./..") == "//";
assert normpath("//foo.txt/../.") == "//";

# Test normpath() for filenames with dotted prefix and suffix.
assert normpath(".foo.txt.") == ".foo.txt.";
assert normpath("./.foo.txt.") == ".foo.txt.";
assert normpath(".foo.txt./.") == ".foo.txt.";
assert normpath("././.foo.txt.") == ".foo.txt.";
assert normpath(".foo.txt././.") == ".foo.txt.";
assert normpath("../.foo.txt.") == "../.foo.txt.";
assert normpath(".foo.txt./..") == ".";
assert normpath("../../.foo.txt.") == "../../.foo.txt.";
assert normpath(".foo.txt./../..") == "..";
assert normpath("./../.foo.txt.") == "../.foo.txt.";
assert normpath(".././.foo.txt.") == "../.foo.txt.";
assert normpath(".foo.txt././..") == ".";
assert normpath(".foo.txt./../.") == ".";

assert normpath("/.foo.txt.") == "/.foo.txt.";
assert normpath("/./.foo.txt.") == "/.foo.txt.";
assert normpath("/.foo.txt./.") == "/.foo.txt.";
assert normpath("/././.foo.txt.") == "/.foo.txt.";
assert normpath("/.foo.txt././.") == "/.foo.txt.";
assert normpath("/../.foo.txt.") == "/.foo.txt.";
assert normpath("/.foo.txt./..") == "/";
assert normpath("/../../.foo.txt.") == "/.foo.txt.";
assert normpath("/.foo.txt./../..") == "/";
assert normpath("/./../.foo.txt.") == "/.foo.txt.";
assert normpath("/.././.foo.txt.") == "/.foo.txt.";
assert normpath("/.foo.txt././..") == "/";
assert normpath("/.foo.txt./../.") == "/";

assert normpath("//.foo.txt.") == "//.foo.txt.";
assert normpath("//./.foo.txt.") == "//.foo.txt.";
assert normpath("//.foo.txt./.") == "//.foo.txt.";
assert normpath("//././.foo.txt.") == "//.foo.txt.";
assert normpath("//.foo.txt././.") == "//.foo.txt.";
assert normpath("//../.foo.txt.") == "//.foo.txt.";
assert normpath("//.foo.txt./..") == "//";
assert normpath("//../../.foo.txt.") == "//.foo.txt.";
assert normpath("//.foo.txt./../..") == "//";
assert normpath("//./../.foo.txt.") == "//.foo.txt.";
assert normpath("//.././.foo.txt.") == "//.foo.txt.";
assert normpath("//.foo.txt././..") == "//";
assert normpath("//.foo.txt./../.") == "//";

# Test normpath() for filenames with double-dotted prefix and suffix.
assert normpath("..foo.txt..") == "..foo.txt..";
assert normpath("./..foo.txt..") == "..foo.txt..";
assert normpath("..foo.txt../.") == "..foo.txt..";
assert normpath("././..foo.txt..") == "..foo.txt..";
assert normpath("..foo.txt.././.") == "..foo.txt..";
assert normpath("../..foo.txt..") == "../..foo.txt..";
assert normpath("..foo.txt../..") == ".";
assert normpath("../../..foo.txt..") == "../../..foo.txt..";
assert normpath("..foo.txt../../..") == "..";
assert normpath("./../..foo.txt..") == "../..foo.txt..";
assert normpath(".././..foo.txt..") == "../..foo.txt..";
assert normpath("..foo.txt.././..") == ".";
assert normpath("..foo.txt../../.") == ".";

assert normpath("/..foo.txt..") == "/..foo.txt..";
assert normpath("/./..foo.txt..") == "/..foo.txt..";
assert normpath("/..foo.txt../.") == "/..foo.txt..";
assert normpath("/././..foo.txt..") == "/..foo.txt..";
assert normpath("/..foo.txt.././.") == "/..foo.txt..";
assert normpath("/../..foo.txt..") == "/..foo.txt..";
assert normpath("/..foo.txt../..") == "/";
assert normpath("/../../..foo.txt..") == "/..foo.txt..";
assert normpath("/..foo.txt../../..") == "/";
assert normpath("/./../..foo.txt..") == "/..foo.txt..";
assert normpath("/.././..foo.txt..") == "/..foo.txt..";
assert normpath("/..foo.txt.././..") == "/";
assert normpath("/..foo.txt../../.") == "/";

assert normpath("//..foo.txt..") == "//..foo.txt..";
assert normpath("//./..foo.txt..") == "//..foo.txt..";
assert normpath("//..foo.txt../.") == "//..foo.txt..";
assert normpath("//././..foo.txt..") == "//..foo.txt..";
assert normpath("//..foo.txt.././.") == "//..foo.txt..";
assert normpath("//../..foo.txt..") == "//..foo.txt..";
assert normpath("//..foo.txt../..") == "//";
assert normpath("//../../..foo.txt..") == "//..foo.txt..";
assert normpath("//..foo.txt../../..") == "//";
assert normpath("//./../..foo.txt..") == "//..foo.txt..";
assert normpath("//.././..foo.txt..") == "//..foo.txt..";
assert normpath("//..foo.txt.././..") == "//";
assert normpath("//..foo.txt../../.") == "//";

# Test normpath() for filenames with triple-dotted prefix and suffix.
assert normpath("...foo.txt...") == "...foo.txt...";
assert normpath("./...foo.txt...") == "...foo.txt...";
assert normpath("...foo.txt.../.") == "...foo.txt...";
assert normpath("././...foo.txt...") == "...foo.txt...";
assert normpath("...foo.txt..././.") == "...foo.txt...";
assert normpath("../...foo.txt...") == "../...foo.txt...";
assert normpath("...foo.txt.../..") == ".";
assert normpath("../../...foo.txt...") == "../../...foo.txt...";
assert normpath("...foo.txt.../../..") == "..";
assert normpath("./../...foo.txt...") == "../...foo.txt...";
assert normpath(".././...foo.txt...") == "../...foo.txt...";
assert normpath("...foo.txt..././..") == ".";
assert normpath("...foo.txt.../../.") == ".";

assert normpath("/...foo.txt...") == "/...foo.txt...";
assert normpath("/./...foo.txt...") == "/...foo.txt...";
assert normpath("/...foo.txt.../.") == "/...foo.txt...";
assert normpath("/././...foo.txt...") == "/...foo.txt...";
assert normpath("/...foo.txt..././.") == "/...foo.txt...";
assert normpath("/../...foo.txt...") == "/...foo.txt...";
assert normpath("/...foo.txt.../..") == "/";
assert normpath("/../../...foo.txt...") == "/...foo.txt...";
assert normpath("/...foo.txt.../../..") == "/";
assert normpath("/./../...foo.txt...") == "/...foo.txt...";
assert normpath("/.././...foo.txt...") == "/...foo.txt...";
assert normpath("/...foo.txt..././..") == "/";
assert normpath("/...foo.txt.../../.") == "/";

assert normpath("//...foo.txt...") == "//...foo.txt...";
assert normpath("//./...foo.txt...") == "//...foo.txt...";
assert normpath("//...foo.txt.../.") == "//...foo.txt...";
assert normpath("//././...foo.txt...") == "//...foo.txt...";
assert normpath("//...foo.txt..././.") == "//...foo.txt...";
assert normpath("//../...foo.txt...") == "//...foo.txt...";
assert normpath("//...foo.txt.../..") == "//";
assert normpath("//../../...foo.txt...") == "//...foo.txt...";
assert normpath("//...foo.txt.../../..") == "//";
assert normpath("//./../...foo.txt...") == "//...foo.txt...";
assert normpath("//.././...foo.txt...") == "//...foo.txt...";
assert normpath("//...foo.txt..././..") == "//";
assert normpath("//...foo.txt.../../.") == "//";
