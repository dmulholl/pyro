# Variable scoping 1: no shadowing.
with foo = 123 {
    assert foo == 123;
    foo += 1;
    assert foo == 124;
}
assert $is_err(try (foo += 1));

# Variable scoping 2: shadowing a global.
var bar = 123;
assert bar == 123;

with bar = 456 {
    assert bar == 456;
    bar += 1;
    assert bar == 457;
}
assert bar == 123;

# Variable scoping 3: shadowing a local.
{
    var baz = 123;
    assert baz == 123;

    with baz = 456 {
        assert baz == 456;
        baz += 1;
        assert baz == 457;
    }

    assert baz == 123;
}
assert $is_err(try(baz += 1));

# Simple happy path -- no panics or early returns.
var global = 0;

class Object {
    def $end_with() {
        global += 1;
    }
}

with obj = Object() {
    assert global == 0;
}
assert global == 1;

with obj1 = Object() {
    assert global == 1;
    with obj2 = Object() {
        assert global == 1;
    }
    assert global == 2;
}
assert global == 3;

def func() {
    with obj = Object() {
        assert global == 3;
    }
    return "func";
}
assert func() == "func";
assert global == 4;

# Early returns.
global = 0;

def f1() {
    with obj = Object() {
        return "f1";
    }
}
assert f1() == "f1";
assert global == 1;

def f2() {
    with obj = Object() {
        with obj = Object() {
            return "f2";
        }
    }
}
assert f2() == "f2";
assert global == 3;

def f3() {
    with obj = Object() {
        return f2();
    }
}
assert f3() == "f2";
assert global == 6;

# Panics.
global = 0;

with obj = Object() {
    assert $is_err(try $panic("oh no!"));
}
assert global == 1;

def f4() {
    with obj = Object() {
        $panic("on no!");
    }
}
assert $is_err(try f4());
assert global == 2;

def f5() {
    with obj = Object() {
        f4();
    }
}
assert $is_err(try f5());
assert global == 4;

def f6() {
    with obj = Object() {
        with obj = Object() {
            f4();
        }
    }
}
assert $is_err(try f6());
assert global == 7;

def f7() {
    assert $is_err(try f6());
    return "f7";
}
assert f7() == "f7";
assert global == 10;

# Test unpacking.
with (foo) = $tup(123) {
    assert foo == 123;
}

with (foo) = $tup(123, 456) {
    assert foo == 123;
}

with (foo, bar) = $tup(123, 456) {
    assert foo == 123;
    assert bar == 456;
}

with (foo, bar, baz) = $tup(123, 456, 789) {
    assert foo == 123;
    assert bar == 456;
    assert baz == 789;
}

with (foo, _, baz) = $tup(123, 456, 789) {
    assert foo == 123;
    assert baz == 789;
}

# Test 'with' inside 'for'.
global = 0;
for i in $range(3) {
    with obj = Object() {
    }
}
assert global == 3;

global = 0;
for i in $range(3) {
    with obj1 = Object() {
        with obj2 = Object() {
        }
    }
}
assert global == 6;

global = 0;
for i in $range(3) {
    with obj1 = Object() {
        with obj2 = Object() {
            with obj3 = Object() {
            }
        }
    }
}
assert global == 9;

global = 0;
for i in $range(3) {
    for j in $range(3) {
        with obj = Object() {
        }
    }
}
assert global == 9;

# Test 'with' inside 'for' with 'continue'.
global = 0;
for i in $range(3) {
    with obj = Object() {
        continue;
    }
}
assert global == 3;

global = 0;
for i in $range(3) {
    with obj1 = Object() {
        with obj2 = Object() {
            continue;
        }
    }
}
assert global == 6;

global = 0;
for i in $range(3) {
    with obj1 = Object() {
        with obj2 = Object() {
            with obj3 = Object() {
                continue;
            }
        }
    }
}
assert global == 9;

global = 0;
for i in $range(3) {
    for j in $range(3) {
        with obj = Object() {
            continue;
        }
    }
}
assert global == 9;

# Test 'with' inside 'for' with 'break'.
global = 0;
for i in $range(3) {
    with obj = Object() {
        break;
    }
}
assert global == 1;

global = 0;
for i in $range(3) {
    with obj1 = Object() {
        with obj2 = Object() {
            break;
        }
    }
}
assert global == 2;

global = 0;
for i in $range(3) {
    with obj1 = Object() {
        with obj2 = Object() {
            with obj3 = Object() {
                break;
            }
        }
    }
}
assert global == 3;

global = 0;
for i in $range(3) {
    for j in $range(3) {
        with obj = Object() {
            break;
        }
    }
}
assert global == 3;

# Test 'with' inside 'loop'.
global = 0;
loop var i = 0; i < 3; i += 1 {
    with obj = Object() {
    }
}
assert global == 3;

global = 0;
loop var i = 0; i < 3; i += 1 {
    loop var j = 0; j < 3; j += 1 {
        with obj = Object() {
        }
    }
}
assert global == 9;

global = 0;
loop var i = 0; i < 3; i += 1 {
    with obj1 = Object() {
        with obj2 = Object() {
        }
    }
}
assert global == 6;

# Test 'with' inside 'loop' with 'continue'.
global = 0;
loop var i = 0; i < 3; i += 1 {
    with obj = Object() {
        continue;
    }
}
assert global == 3;

global = 0;
loop var i = 0; i < 3; i += 1 {
    loop var j = 0; j < 3; j += 1 {
        with obj = Object() {
            continue;
        }
    }
}
assert global == 9;

global = 0;
loop var i = 0; i < 3; i += 1 {
    with obj1 = Object() {
        with obj2 = Object() {
            continue;
        }
    }
}
assert global == 6;

# Test 'with' inside 'loop' with 'break'.
global = 0;
loop var i = 0; i < 3; i += 1 {
    with obj = Object() {
        break;
    }
}
assert global == 1;

global = 0;
loop var i = 0; i < 3; i += 1 {
    loop var j = 0; j < 3; j += 1 {
        with obj = Object() {
            break;
        }
    }
}
assert global == 3;

global = 0;
loop var i = 0; i < 3; i += 1 {
    with obj1 = Object() {
        with obj2 = Object() {
            break;
        }
    }
}

assert global == 2;

# Test 'with' inside 'while'.
global = 0;
var i = 0;
while (i < 3) {
    i += 1;
    with obj = Object() {
    }
}
assert global == 3;

global = 0;
i = 0;
while (i < 3) {
    i += 1;
    var j = 0;
    while j < 3 {
        j += 1;
        with obj = Object() {
        }
    }
}
assert global == 9;

global = 0;
i = 0;
while (i < 3) {
    i += 1;
    with obj1 = Object() {
        with obj2 = Object() {
        }
    }
}
assert global == 6;

# Test 'with' inside 'while' with 'continue'.
global = 0;
i = 0;
while (i < 3) {
    i += 1;
    with obj = Object() {
        continue;
    }
}
assert global == 3;

global = 0;
i = 0;
while (i < 3) {
    i += 1;
    var j = 0;
    while j < 3 {
        j += 1;
        with obj = Object() {
            continue;
        }
    }
}
assert global == 9;

global = 0;
i = 0;
while (i < 3) {
    i += 1;
    with obj1 = Object() {
        with obj2 = Object() {
            continue;
        }
    }
}
assert global == 6;

# Test 'with' inside 'while' with 'break'.
global = 0;
i = 0;
while (i < 3) {
    i += 1;
    with obj = Object() {
        break;
    }
}
assert global == 1;

global = 0;
i = 0;
while (i < 3) {
    i += 1;
    var j = 0;
    while j < 3 {
        j += 1;
        with obj = Object() {
            break;
        }
    }
}
assert global == 3;

global = 0;
i = 0;
while (i < 3) {
    i += 1;
    with obj1 = Object() {
        with obj2 = Object() {
            break;
        }
    }
}
assert global == 2;

# Test 'for' inside 'with'.
with foo = 1 {
    var sum = 0;
    for i in $range(3) {
        assert foo == 1;
        sum += (i + foo);
    }
    assert sum == (0 + 1) + (1 + 1) + (2 + 1);
}

with foo = 1 {
    var sum = 0;
    for i in $range(3) {
        assert foo == 1;
        with bar = 2 {
            assert bar == 2;
            sum += (i + foo + bar);
        }
    }
    assert sum == (0 + 1 + 2) + (1 + 1 + 2) + (2 + 1 + 2);
}

# Test 'with' inside 'for' inside a function.
global = 0;
var func1 = def() {
    for i in $range(3) {
        with obj = Object() {
        }
    }
};
func1();
assert global == 3;

global = 0;
var func2 = def() {
    for i in $range(3) {
        with obj = Object() {
            continue;
        }
    }
};
func2();
assert global == 3;

global = 0;
var func3 = def() {
    for i in $range(3) {
        with obj = Object() {
            break;
        }
    }
};
func3();
assert global == 1;
