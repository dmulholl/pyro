def fib(n) {
    if n < 2 {
        return n;
    }
    return fib(n - 1) + fib(n - 2);
}

var fib_sum = 0;

loop var i = 0; i < 25; i += 1 {
    fib_sum += fib(i);
}


var string = "";
var sum = 0;
var vec = $vec();
var map = $map();

for i in $range(1000) {
    var foo = "foo";
    var bar = "bar";
    string += foo;
    string += bar;
    sum += i * i + 1 - 2 + 3 - 4 + 5 - 6 + 7 - 8 + 9;
    sum += string:byte_count();
    sum += string:char_count();
    vec:append($tup(string, sum));
    map:set(i, sum);
    map:set($str(i), string);
}


class Foo {
    var x, y, z;

    def $init() {
        self.x = "foo";
        self.y = "bar";
    }

    def bar(arg) {
        self.z = $fmt("{}-{}-{}", self.x, self.y, arg);
    }
}

for i in $range(1000) {
    var foo = Foo();
    foo:bar(i);
}
