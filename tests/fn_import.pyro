import std::fs;

var lib1 = $import("lib1");
assert $is_module(lib1);
assert lib1::mod_name == "lib1";
assert lib1::get_mod_name() == "lib1";
assert lib1::add(1, 2) == 3;

var lib5 = $import("lib5");
assert $is_module(lib5);
assert lib5::mod_name == "lib5";
assert lib5::get_mod_name() == "lib5";
assert lib5::add(1, 2) == 3;

var lib5_mod = $import("lib5::module");
assert $is_module(lib5);
assert lib5_mod::mod_name == "lib5::module";
assert lib5_mod::get_mod_name() == "lib5::module";
assert lib5_mod::add(1, 2) == 3;

var lib5_child = $import("lib5::child");
assert $is_module(lib5_child);
assert lib5_child::mod_name == "lib5::child";
assert lib5_child::get_mod_name() == "lib5::child";
assert lib5_child::add(1, 2) == 3;

var lib5_child_mod = $import("lib5::child::module");
assert $is_module(lib5_child_mod);
assert lib5_child_mod::mod_name == "lib5::child::module";
assert lib5_child_mod::get_mod_name() == "lib5::child::module";
assert lib5_child_mod::add(1, 2) == 3;

var lib5_child_grandchild = $import("lib5::child::grandchild");
assert $is_module(lib5_child_grandchild);
assert lib5_child_grandchild::mod_name == "lib5::child::grandchild";
assert lib5_child_grandchild::get_mod_name() == "lib5::child::grandchild";
assert lib5_child_grandchild::add(1, 2) == 3;

var lib5_child_grandchild_mod = $import("lib5::child::grandchild::module");
assert $is_module(lib5_child_grandchild_mod);
assert lib5_child_grandchild_mod::mod_name == "lib5::child::grandchild::module";
assert lib5_child_grandchild_mod::get_mod_name() == "lib5::child::grandchild::module";
assert lib5_child_grandchild_mod::add(1, 2) == 3;

with module = $import("lib1") {
    assert $is_module(module);
    assert module::mod_name == "lib1";
    assert module::get_mod_name() == "lib1";
    assert module::add(1, 2) == 3;
}

with module = $import("lib5::child::grandchild::module") {
    assert $is_module(module);
    assert module::mod_name == "lib5::child::grandchild::module";
    assert module::get_mod_name() == "lib5::child::grandchild::module";
    assert module::add(1, 2) == 3;
}

with module = try $import("lib1") {
    assert $is_module(module);
    assert module::mod_name == "lib1";
    assert module::get_mod_name() == "lib1";
    assert module::add(1, 2) == 3;
}

with module = try $import("lib5::child::grandchild::module") {
    assert $is_module(module);
    assert module::mod_name == "lib5::child::grandchild::module";
    assert module::get_mod_name() == "lib5::child::grandchild::module";
    assert module::add(1, 2) == 3;
}

with module = try $import("foo") {
    assert $is_err(module);
}

with module = try $import("foo::bar") {
    assert $is_err(module);
}

with dirpath = fs::dirname($filepath) {
    let module = $import(fs::join(dirpath, "lib_add.pyro"));
    assert module::add(1, 2) == 3;
}
