def empty_function() {
}
assert empty_function() == null;


def no_explicit_return() {
    var foo = "bar";
}
assert no_explicit_return() == null;


def add(a, b, c) {
    return a + b + c;
}
assert add(1, 2, 3) == 6;
assert add(1, 2, 3,) == 6;


def takes_zero_args() {
}
assert $is_err(try takes_zero_args("foo"));
assert $is_err(try takes_zero_args("foo", "bar"));


def takes_one_arg(arg) {
}
assert $is_err(try takes_one_arg());
assert $is_err(try takes_one_arg("foo", "bar"));


def variadic_func_1(*vargs) {
    assert $is_tup(vargs);
    return vargs:count();
}
assert variadic_func_1() == 0;
assert variadic_func_1("foo") == 1;
assert variadic_func_1("foo", "bar") == 2;
assert variadic_func_1("foo", "bar", "baz") == 3;
assert variadic_func_1(*["foo", "bar", "baz"]) == 3;


def variadic_func_2(arg1, arg2, *vargs) {
    assert $is_tup(vargs);
    return vargs:count();
}
assert variadic_func_2("foo", "bar") == 0;
assert variadic_func_2("foo", "bar", "baz") == 1;
assert variadic_func_2("foo", "bar", "baz", "bam") == 2;
assert variadic_func_2("foo", "bar", "baz", "bam", "bop") == 3;
assert variadic_func_2(*["foo", "bar", "baz", "bam", "bop"]) == 3;
