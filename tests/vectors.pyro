var foo = $vec();
assert $is_vec(foo);
assert foo:count() == 0;

foo:append("foo");
foo:append("bar");
assert foo:count() == 2;
assert foo:get(0) == "foo";
assert foo:get(1) == "bar";

foo:set(1, "foobar");
assert foo:count() == 2;
assert foo:get(1) == "foobar";

var bar = $vec(10, null);
assert $is_vec(bar);
assert bar:count() == 10;
assert bar:get(5) == null;

var baz = ["foo", 123, true];
assert $is_vec(baz);
assert baz:count() == 3;

assert baz:get(0) == "foo";
assert baz:get(1) == 123;
assert baz:get(2) == true;

assert baz[0] == "foo";
assert baz[1] == 123;
assert baz[2] == true;

baz[0] = "bar";
assert baz[0] == "bar";

assert $str($vec()) == "[]";

var vec1 = ["foo", 123, 'a', true];
assert $str(vec1) == `["foo", 123, 'a', true]`;

var range = $range(10);
var vec2 = $vec(range);
assert vec2:count() == 10;
assert vec2[0] == 0;
assert vec2[1] == 1;
assert vec2[2] == 2;

var vec3 = [true, false, null];
var vec4 = $vec(vec3);
assert vec4:count() == 3;
assert vec4[0] == true;
assert vec4[1] == false;
assert vec4[2] == null;
